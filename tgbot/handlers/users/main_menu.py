
from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import ReplyKeyboardRemove

import tgbot.config
from tgbot.config import Config
from tgbot.keyboards.default.games_menu_kb import games_menukb, games_menu_mp_kb
from tgbot.keyboards.default.main_menu_kb import main_menukb, feed_backkb, market_menukb
from tgbot.keyboards.inline.callback_datas import replenish_callback
from tgbot.keyboards.inline.profile_actions_kb import profile_actionskb

from tgbot.keyboards.inline.replenish_kb import replenishkb
from tgbot.misc.db_api.schemas import quick_commands as commands


async def play_game_with_friend(message: types.Message, state: FSMContext):
    await message.answer("–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ... (–ü—Ä–∞—Å—Ç–∏—Ç–∏)")
    # await state.set_state("choose_game_to_play")


async def cancel_game_list_mp_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                         reply_markup=main_menukb)


async def play_game(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:",
                         reply_markup=games_menukb)


async def show_admins_id(message: types.Message):
    config = message.bot["config"]
    await message.answer(f"{config.tg_bot.admin_ids}")


async def cancel_games_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                         reply_markup=main_menukb)


async def market_menu(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                         reply_markup=market_menukb)


async def cancel_market_menu(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                         reply_markup=main_menukb)


async def feedback(message: types.Message, state: FSMContext):
    await message.answer("–ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º –∏–ª–∏ –≤–æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏—Ö —Å—é–¥–∞:",
                         reply_markup=feed_backkb)
    await state.set_state("feedback")


async def cancel_feedback(message: types.Message, state: FSMContext):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                         reply_markup=main_menukb)
    await state.finish()


async def replenish_user_balance(message: types.Message):
    await message.answer("–ó–¥–µ—Å—å –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.",
                         reply_markup=ReplyKeyboardRemove())
    await message.answer("üíé –í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—É–≥—Ä–∏–∫–æ–≤ –í—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:",
                         reply_markup=replenishkb)


async def replenish_choice(call: types.CallbackQuery, callback_data: dict):
    # await call.answer(cache_time=60)
    replenish = callback_data.get("amount")
    user = await commands.select_user(id=call.from_user.id)
    if replenish == "cancel":
        await call.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                                  reply_markup=main_menukb)
        await call.message.bot.delete_message(chat_id=call.from_user.id,
                                              message_id=call.message.message_id)
    else:
        tugriks = int(replenish)
        await call.message.answer(f"‚úÖ –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {round(tugriks)} —Ç—É–≥—Ä–∏–∫–æ–≤!")
        balance = user.balance
        await commands.update_user_balance(id=call.from_user.id, balance=balance + tugriks)


async def user_profile(message: types.Message):
    user = await commands.select_user(id=message.from_user.id)
    balance = user.balance
    identificator = user.identificator
    await message.answer("–ò—Ñ–Ω–æ—Ä–º–∞—Ü–∏—è –æ –í–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ...",
                         reply_markup=ReplyKeyboardRemove())
    await message.answer(f"üëÄ –ü—Ä–æ—Ñ–∏–ª—å {message.from_user.full_name}\n"
                         f"üíé –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance}</b>\n\n"
                         f"–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
                         f"–°–∫–æ—Ä–æ —Ç—É—Ç –±—É–¥–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...\n\n"
                         f"üõÇ –í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: <pre>{identificator}</pre>",
                         reply_markup=profile_actionskb(identificator))


def register_main_menu(dp: Dispatcher):
    dp.register_message_handler(show_admins_id, commands=["admins"], state="*")
    dp.register_message_handler(cancel_feedback, text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", state="feedback")
    dp.register_message_handler(play_game_with_friend, text="üôã‚Äç‚ôÇÔ∏è –ò–≥—Ä–∞—Ç—å —Å –¥—Ä—É–≥–æ–º", state="*")
    dp.register_message_handler(cancel_game_list_mp_menu, text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state="*")
    dp.register_message_handler(play_game, text="üé∞ –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞", state="*")
    dp.register_message_handler(cancel_games_menu, text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", state="*")
    dp.register_message_handler(feedback, text="üë®‚Äçüíª –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", state="*")
    dp.register_message_handler(market_menu, text="üíà –ú–∞–≥–∞–∑–∏–Ω", state="*")
    dp.register_message_handler(cancel_market_menu, text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", state="*")
    dp.register_message_handler(replenish_user_balance, text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", state="*")
    dp.register_callback_query_handler(replenish_choice, replenish_callback.filter(
        amount=["50", "100", "250", "500", "5000", "cancel"]), state=None)
    dp.register_message_handler(user_profile, text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", state="*")
