import asyncio
import random

from aiogram import types, Dispatcher
from aiogram.types import ReplyKeyboardRemove

from tgbot.keyboards.default.main_menu_kb import main_menukb
from tgbot.keyboards.inline.add_friend_kb import add_friendkb
from tgbot.keyboards.inline.callback_datas import profile_actions_callback, friends_menu_callback
from tgbot.keyboards.inline.profile_actions_kb import profile_actionskb, friends_menukb


from tgbot.misc.db_api.schemas import quick_commands as commands
from tgbot.misc.display_user_name_list import display_user_name_list
from tgbot.misc.states import Connection


async def show_user_friends_list(call: types.CallbackQuery, callback_data: dict):
    type = callback_data.get("type")
    user = await commands.select_user(id=call.from_user.id)
    friends_id_list = user.friends

    if type == "show_friends":
        if len(friends_id_list) == 0:
            await call.bot.edit_message_text(text="–£ –í–∞—Å –Ω–µ—Ç –¥—Ä—É–∑–µ–π!",
                                             chat_id=call.from_user.id,
                                             message_id=call.message.message_id,
                                             reply_markup=friends_menukb)
        else:
            emoji = ["üê∂", "üê±", "üêπ", "ü¶ä", "ü¶ï", "üêô", "üêù", "üê•", "üê≥", "üêº", "üê®"]
            friends_names = await display_user_name_list(friends_id_list)
            print(friends_names)
            text = "üëÄ –í–∞—à–∏ –¥—Ä—É–∑—å—è:\n\n" + "\n".join([
                f"{random.choice(emoji)} <b>{friends_names[i]}</b>"
                for i in range(0, len(friends_names))
            ])
            await call.bot.edit_message_text(text=text,
                                             chat_id=call.from_user.id,
                                             message_id=call.message.message_id,
                                             reply_markup=friends_menukb)
    elif type == "add_friend":
        await call.bot.edit_message_text(text="–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—Ä–æ—Å –¥—Ä—É–∂–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, "
                                              "–≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π <b>–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä</b>\n\n"
                                              "–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ <b>\"–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å\"</b>.\n\n"
                                              "<i>–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å—ë –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π!</i>",
                                         message_id=call.message.message_id,
                                         chat_id=call.from_user.id,
                                         reply_markup=add_friendkb)
        await Connection.Q1.set()
    elif type == "cancel_1":
        await call.message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                                  reply_markup=main_menukb)
        await call.bot.delete_message(chat_id=call.from_user.id,
                                      message_id=call.message.message_id)


async def back_to_user_profile(call: types.CallbackQuery, callback_data: dict):
    type = callback_data.get("type")
    if type == "cancel_2":
        user = await commands.select_user(id=call.from_user.id)
        balance = user.balance
        identificator = user.identificator
        await call.bot.edit_message_text(text=f"üëÄ –ü—Ä–æ—Ñ–∏–ª—å {call.from_user.full_name}\n"
                                              f"üíé –í–∞—à –±–∞–ª–∞–Ω—Å: <b>{balance}</b>\n\n"
                                              f"üõÇ –í–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: <pre>{identificator}</pre>",
                                              reply_markup=profile_actionskb(identificator),
                                              chat_id=call.from_user.id,
                                              message_id=call.message.message_id)


def register_process_user_profile(dp: Dispatcher):
    dp.register_callback_query_handler(show_user_friends_list, profile_actions_callback.filter(
        type=["show_friends", "cancel_1", "add_friend"]), state="*")
    dp.register_callback_query_handler(back_to_user_profile, friends_menu_callback.filter(
        type=["cancel_2"]), state="*")
