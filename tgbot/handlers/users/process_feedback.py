from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext

from tgbot.keyboards.default.main_menu_kb import main_menukb
from tgbot.keyboards.inline.callback_datas import admin_feedback_callback
from tgbot.keyboards.inline.feed_back_kb import admin_feedback_kb
from tgbot.misc.db_api.schemas import quick_commands as commands
import tgbot.config


async def send_feedback(message: types.Message, state: FSMContext):
    feedback_msg = message.text

    mention = message.from_user.get_mention()
    id = message.from_user.id
    await message.answer("üì© –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É, —Å–ø–∞—Å–∏–±–æ!",
                         reply_markup=main_menukb)
    await message.bot.send_message(chat_id=tgbot.config.load_config().tg_bot.admin_ids[0],
                                   text=f"üôã‚Äç‚ôÇÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {mention} –ø—Ä–∏—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {feedback_msg}.",
                                   reply_markup=admin_feedback_kb(id=id))
    await state.finish()


async def answer_feedback_menu(call: types.CallbackQuery, callback_data: dict, state: FSMContext):
    type = callback_data.get("type")
    to_answer_id = int(callback_data.get("id"))
    if type == "answer":
        await call.message.answer("–ß—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é?")
        await state.set_state("answer_to_feedback")
        await commands.update_admin_feedback_user_id(id=call.from_user.id,
                                                     feedback_user_id=to_answer_id)
    elif type == "gratitude":
        await call.message.answer("üì© –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!",
                                  reply_markup=main_menukb)
        await call.bot.send_message(chat_id=to_answer_id,
                                    text="üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</b> –±–æ—Ç–∞ –ø—Ä–∏—Å–ª–∞–ª –æ—Ç–≤–µ—Ç –Ω–∞ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
                                         "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –º–æ–µ–≥–æ –±–æ—Ç–∞! –Ø –ø—Ä–æ–¥–æ–ª–∂—É –µ–≥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞—Ç—å")
        await call.bot.delete_message(chat_id=call.from_user.id,
                                      message_id=call.message.message_id)


async def answer_feedback_text(message: types.Message, state: FSMContext):
    feedback_answer = message.text
    admin = await commands.select_admin(id=message.from_user.id)
    user_to_answer_id = admin.feedback_user_id
    await message.answer("üì© –í–∞—à –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!",
                         reply_markup=main_menukb)
    await message.bot.send_message(chat_id=user_to_answer_id,
                                   text=f"üë®‚Äçüíª <b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫</b> –±–æ—Ç–∞ –ø—Ä–∏—Å–ª–∞–ª –æ—Ç–≤–µ—Ç"
                                        f" –Ω–∞ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {feedback_answer}.")
    await state.finish()
    await message.bot.delete_message(chat_id=message.from_user.id,
                                     message_id=message.message_id)


def register_process_feedback(dp: Dispatcher):
    dp.register_message_handler(send_feedback,
                                content_types=types.ContentTypes.TEXT, state="feedback")
    dp.register_callback_query_handler(answer_feedback_menu,
                                       admin_feedback_callback.filter(type=["answer", "gratitude"]), state="*")
    dp.register_message_handler(answer_feedback_text,
                                content_types=types.ContentTypes.ANY, state="answer_to_feedback")

